{"version":3,"sources":["formattedDate.js","weatherIcon.js","weatherTemperature.js","weatherInfo.js","weatherForecastDay.js","weatherForecast.js","weather.js","App.js","reportWebVitals.js","index.js"],"names":["FormattedDate","props","day","date","getDay","hours","getHours","concat","minutes","getMinutes","react_default","a","createElement","WeatherIcon","build_default","icon","01d","01n","02d","02n","03d","03n","04d","04n","09d","09n","10d","10n","11d","11n","13d","13n","50d","50n","code","color","size","animate","WeatherTemperature","_useState","useState","_useState2","Object","slicedToArray","unit","setUnit","className","Math","round","celsuis","href","onClick","event","preventDefault","WeatherInfo","data","city","description","temperature","humidity","wind","WeatherForecastDay","Date","dt","weather","temp","max","maxTemperature","min","minTemperature","WeatherForcast","loaded","setLoaded","_useState3","_useState4","forecast","setForecast","useEffect","coordinates","console","log","map","dailyForecast","index","key","longitude","lon","latitude","lat","apiUrl","axios","get","then","response","daily","Weather","defaultCity","setCity","ready","weatherData","setWeatherData","handleResponse","coord","main","speed","name","search","onSubmit","type","placeholder","autoFocus","onChange","target","value","App","class","rel","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.e2ead269.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FormattedDate(props) {\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    \n    let day = days[props.date.getDay()];\n    let hours = props.date.getHours();\n    if (hours < 10) {\n        hours = `0${hours}`\n    }\n    let minutes = props.date.getMinutes();\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n\n\n    return (\n        <div>\n            {day} {hours}:{minutes}\n        </div>\n    );\n}","import React from 'react';\n\nimport ReactAnimatedWeather from 'react-animated-weather';\nexport default function WeatherIcon(props) {\n    const codeMapping = {\n        \"01d\": \"CLEAR_DAY\",\n        \"01n\": \"CLEAR_NIGHT\",\n        \"02d\": \"PARTLY_CLOUDY_DAY\",\n        \"02n\": \"PARTLY_CLOUDY_NIGHT\",\n        \"03d\": \"PARTLY_CLOUDY_DAY\",\n        \"03n\": \"PARTLY_CLOUDY_NIGHT\",\n        \"04d\": \"CLOUDY\",\n        \"04n\": \"CLOUDY\",\n        \"09d\": \"RAIN\",\n        \"09n\": \"RAIN\",\n        \"10d\": \"RAIN\",\n        \"10n\": \"RAIN\",\n        \"11d\": \"CLEAR_NIGHT\",\n        \"11n\": \"CLEAR_NIGHT\",\n        \"13d\": \"SNOW\",\n        \"13n\": \"SNOW\",\n        \"50d\": \"FOG\",\n        \"50n\": \"FOG\",\n\n    };\n    return ( \n        <ReactAnimatedWeather\n        icon= {codeMapping[props.code]}\n        color= '#1e1e1e'\n        size= {props.size}\n        animate= {true}\n        />\n    );\n\n} ","import React from \"react\";\nimport { useState } from \"react\"\n\n\nexport default function WeatherTemperature(props) {\n    const [unit, setUnit] = useState(\"celsuis\");\n    function showFahrenheit(event) {\n        event.preventDefault();\n        setUnit(\"fahrenheit\");\n\n    }\n    function showCelsuis(event) {\n        event.preventDefault();\n        setUnit(\"celsuis\")\n\n    }\n    function fahrenheit() {\n        return (props.celsuis * 9) / 5 + 32;\n    }\n    if (unit === \"celsuis\") {\n        return (\n            <div className=\"WeatherTemperature\">\n            <span className=\"temperature\">{Math.round(props.celsuis)}</span>    \n                 <span className=\"unit\">째C|<a href=\"/\" onClick={showFahrenheit}>째F</a></span>\n                 </div>\n        )\n    } else {\n        \n        return (\n            <div className=\"WeatherTemperature\">\n            <span className=\"temperature\">{Math.round(fahrenheit)}</span>    \n                 <span className=\"unit\"><a href=\"/\" onClick={showCelsuis}>째C</a>{\"\"}\n                 |째F\n                 </span>\n                 </div>\n        )\n    }\n\n        \n}\n\n","import React from \"react\";\nimport FormattedDate from \"./formattedDate\";\nimport WeatherIcon from \"./weatherIcon\";\nimport WeatherTemperature from \"./weatherTemperature\";\nexport default function WeatherInfo(props) {\n    return (\n        <div className=\"WeatherInfo\">\n            <h1>{props.data.city}</h1>\n        <ul>\n            <li>\n                <FormattedDate date={props.data.date} />\n            </li>\n            <li className=\"text-capitalize\">{\n            props.data.description}\n            </li>\n        </ul>\n        <div className=\"row mt-3\">\n            <div className=\"col-6\">\n                <div className=\"clearfix\">\n                    <div className=\"float-left\">\n                    <WeatherIcon code={props.data.icon} size={52} />\n                    </div>\n                 <div className=\"float-left\"> \n                <WeatherTemperature celsuis={props.data.temperature} />\n                </div> \n                </div>\n                </div>\n            <div className=\"col-6\">\n                <ul>\n                    <li>Humidity: {props.data.humidity}%</li>\n                    <li>Wind: {props.data.wind}km/h</li>\n                </ul>\n            </div>\n        </div>\n        </div>\n    );\n}","import React from \"react\";\nimport WeatherIcon from \"./weatherIcon\";\n\nexport default function WeatherForecastDay(props) {\n\n    function maxTemperature() {\n        let temperature = Math.round(props.data.temp.max)\n        return `${temperature}째`;\n    }\n    function minTemperature() {\n        let temperature = Math.round(props.data.temp.min)\n        return `${temperature}째`;\n    }\n\n    function day() {\n        let date = new Date(props.data.dt * 1000);\n        let day = date.getDay();\n        let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\n        return days[day];\n    }\n \n\n\n    return (\n        <div>\n        <div className=\"WeatherForecast-day\">{day()}</div>\n                    \n                    <WeatherIcon code={props.data.weather[0].icon} size={36} />\n                    \n                    <div className=\"WeatherForecast-temperatures\">\n                        <span className=\"WeatherForecat-temperature-max\">{maxTemperature()}</span>\n                        <span className=\"WeatherForecat-temperature-min\">{minTemperature()}</span>\n                    </div>\n                    </div>\n    );\n}","import React from \"react\";\nimport \"./weatherForecast.css\"\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport WeatherForecastDay from \"./weatherForecastDay\";\n\n\nexport default function WeatherForcast(props) {\n    let [loaded, setLoaded] = useState(false);\n    let [forecast, setForecast] = useState(null);\n\n    useEffect(() => {\n        setLoaded(false)\n    }, [props.coordinates])\n    \n    \n    function handleResponse(response) {\n        setForecast(response.data.daily);\n        setLoaded(true);\n    }\n    \n\n    if (loaded) {\n        console.log(forecast);\n        return (\n            <div className=\"WeatherForecast\">\n                <div className=\"row\">\n                    {forecast.map(function(dailyForecast, index) {\n                        if (index < 6) {\n                        return (\n                            <div className=\"col\" key={index}>\n                            <WeatherForecastDay data={dailyForecast} />\n                            \n                            </div>\n                        );\n                    } else {\n                        return null;\n                    }\n                    })}\n                   \n                    \n                    \n                </div>\n            </div>\n            \n            );\n\n            \n    \n    } else {\n        let apiKey = \"0f8c88146a435b8db9d6af1cacbbc02a\";\n        let longitude = props.coordinates.lon;\n        let latitude = props.coordinates.lat;\n        let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n        \n        axios.get(apiUrl).then(handleResponse)\n    \n        return null; \n    }\n\n    \n    \n    \n    \n}","import React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./weather.css\"\nimport WeatherInfo from \"./weatherInfo\";\nimport WeatherForcast from \"./weatherForecast\";\n\n\nexport default function Weather(props) {\n    const [city, setCity] = useState(props.defaultCity)\n    const [weatherData, setWeatherData] = useState({ready: false});\n    \n    function handleResponse(response) {\n        \n\n        setWeatherData({\n            ready: true,\n            coordinates: response.data.coord,\n            temperature: response.data.main.temp,\n            humidity: response.data.main.humidity,\n            date: new Date(response.data.dt * 1000),\n            description: response.data.weather[0].description,\n            icon: response.data.weather[0].icon,\n            wind: response.data.wind.speed,\n            city: response.data.name,   \n        });  \n    }\n\n    function search() {\n    const apiKey = \"0f8c88146a435b8db9d6af1cacbbc02a\";\n    \n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n    axios.get(apiUrl).then(handleResponse);\n\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        //search for a city\n        search()\n    }\n\n    function handleCityChange(event) {\n        setCity(event.target.value);\n    }\n\n\n\n    if (weatherData.ready) {\n        return ( \n        <div className=\"Weather\">\n        <form onSubmit={handleSubmit}>\n            <div className=\"row\">\n            <div className=\"col-9\">\n            <input type=\"search\" placeholder=\"Enter a city...\" className=\"form-control\"\n            autoFocus=\"on\" \n            onChange={handleCityChange}/>\n            </div>\n            <div className=\"col-3\">\n            <input type=\"submit\" value=\"Search\" className=\"btn btn-primary w-100\" />\n            </div>\n            </div>\n        </form>\n\n        <WeatherInfo data={weatherData} />\n        <WeatherForcast coordinates={weatherData.coordinates} />\n\n\n        \n    </div>\n    );\n} else {\n    search();\n    \nreturn \"Loading...\"\n\n}\n        \n}","import React from 'react';\nimport './App.css';\nimport Weather from './weather';\n\nexport default function App() {\n  return <div className=\"App\">\n    <div class=\"container\">\n   \n   <Weather defaultCity=\"Lagos\" />\n\n   <footer>This project was coded by Benita Anawonah and is {\" \"}\n    <a href='https://github.com/benitaanawonah/react-weather-app' target='_blank' rel='noopener noreferrer'>\n      open-sourced on Github\n    </a>\n   </footer>\n    </div>\n    </div>\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}